{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bs-navbar/bs-navbar.component.ts","webpack:///src/app/bs-navbar/bs-navbar.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/content/content.component.ts","webpack:///src/app/content/content.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/no-access/no-access.component.ts","webpack:///src/app/no-access/no-access.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/services/authorize.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/signup.service.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","declarations","imports","providers","bootstrap","BsNavbarComponent","ContactComponent","ContentComponent","LoginComponent","service","authService","router","loginForm","user","value","console","log","loginUser","subscribe","response","navigate","localStorage","setItem","body","login","NoAccessComponent","NotFoundComponent","AuthorizeService","httpClient","url","token","userID","post","headers","observe","providedIn","LoginService","welcomeUrl","Headers","SignupService","SidebarComponent","SignupComponent","signupForm","JSON","stringify","createUser","signup","WelcomeComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ancient Astrology for the New Mind';\n}\n","<bs-navbar></bs-navbar>\n\n<main role=\"main\" class=\"container\">\n\t\n  <div class=\"starter-template\">\n    <!-- Add router outlet here -->\n    <router-outlet></router-outlet>\n    \n  </div>\n\n</main><!-- /.container -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BsNavbarComponent } from './bs-navbar/bs-navbar.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { SignupService } from './services/signup.service';\nimport { LoginService } from './services/login.service';\nimport { AuthorizeService } from './services/authorize.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ContentComponent } from './content/content.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NoAccessComponent } from './no-access/no-access.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BsNavbarComponent,\n    SignupComponent,\n    LoginComponent,\n    WelcomeComponent,\n    SidebarComponent,\n    ContentComponent,\n    ContactComponent,\n    NotFoundComponent,\n    NoAccessComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot([\n        {\n          path: '',\n          component: LoginComponent\n        },\n        {\n          path: 'me',\n          component: WelcomeComponent\n        },\n        {\n          path: 'signup',\n          component: SignupComponent\n        }\n        //{path: '**', component: NotFoundComponent},\n      ]),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    SignupService,\n    LoginService,\n    AuthorizeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\nexport class BsNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md fixed-top\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          <a class=\"dropdown-item\">Logout</a> <!-- show this based on a boolean -->\n        </div>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n      <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>content works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { LoginService } from '../services/login.service';\nimport { AuthorizeService } from '../services/authorize.service';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\tloginForm =  new FormGroup({\n    //'username': new FormControl(), //add this later\n    'email': new FormControl(),\n    'password': new FormControl()\n  });\n\n  constructor(private service: LoginService, private authService: AuthorizeService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  token;\n  userID;\n  invalidLogin;\n\n  login() {\n    let user = this.loginForm.value;\n\t\tconsole.log('user', user);\n  \tthis.service.loginUser(user)\n  \t\t.subscribe(response => {\n  \t\t\t//localStorage.setItem('access_token', response.token);\n        //this.token = response.body.token;\n        //this.userID = response.body._id;\n        //this.authorize();\n        console.log('response of Express login API to Angular', response);\n        this.router.navigate(['/me']); //set a boolean of valid login, only then move to welcome page\n        localStorage.setItem('token', response.body['token']);\n        /*\n        if (response) \n          this.router.navigate(['/me']);\n        else\n          this.invalidLogin = true;\n        */\n  \t});\n  }\n  /*\n  authorize() {\n    console.log('Token provided to authorize service in Angular', this.token);\n    this.authService.authorizeUser(this.token, this.userID)\n      .subscribe(response => {\n        console.log('Response by Express after authorization', response);\n      })\n  }\n  */\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n    <!-- Add this later\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input \n        \t\tformControlName=\"username\"\n            id=\"username\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n  -->\n    <div class=\"form-group\">\n        <label for=\"username\">Email</label>\n        <input \n        \t\tformControlName=\"email\"\n            id=\"email\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input \n        \t\tformControlName=\"password\"\n            id=\"password\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\">Login</button>\n</form>\n\n<!-- Can't bind to '*ngIf' since it isn't a known property of 'div'.\n<div **ngIf=\"invalidLogin\" class=\"alert alert-danger\">\n    Invalid username or password\n</div>\n-->\n\n<p> Not registered? </p>\n<a [routerLink]=\"['/signup']\"> Signup </a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-access',\n  templateUrl: './no-access.component.html',\n  styleUrls: ['./no-access.component.css']\n})\nexport class NoAccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>no-access works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizeService {\n\n\tprivate url = 'http://localhost:3000/api/loggedIn';\n\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  authorizeUser(token, userID) {\n  \treturn this.httpClient.post(this.url, userID, {headers: {'x-auth-token': token}, observe: 'response'} ); //No need to stringify the user object\n  \t//return this.httpClient.post(this.url, JSON.stringify(user));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n\t//private url = 'http://localhost:3000/api/login';\n  private url = 'api/login'; //prod\n\tprivate welcomeUrl = 'http://localhost:3000/api/loggedin/me';\n\n\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n  loginUser(user) {\n  \treturn this.httpClient.post(this.url, user, {observe: 'response'});\n        //console.log('Reached before map operator');\n     // .pipe(map(response => { //LEarn about pipe and map and add later\n        //console.log('Response from Express login API to Angular,', response);\n     // })); //No need to stringify the user object\n  \t//return this.httpClient.post(this.url, JSON.stringify(user));\n    //Maybe did not work becuase we did nto return true\n  }\n\n  welcomeUser(user) {\n  \tvar headers = new Headers();\n  \treturn this.httpClient.post(this.welcomeUrl, user); //No need to stringify the user object\n  \t//return this.httpClient.post(this.url, JSON.stringify(user));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n\tprivate url = 'http://localhost:3000/api/signup';\n\n  constructor(private httpClient: HttpClient) { \n\n  }\n\n  createUser(user) {\n  \treturn this.httpClient.post(this.url, user); //No need to stringify the user object\n  \t//return this.httpClient.post(this.url, JSON.stringify(user));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>sidebar works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { SignupService } from '../services/signup.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm =  new FormGroup({\n    'firstname': new FormControl(),\n    'username': new FormControl(),\n    'email': new FormControl(),\n    'password': new FormControl()\n  });\n\n  constructor(private service: SignupService) {\n\n   }\n\n  ngOnInit(): void {\n  }\n\n  signup() {\n    let user = this.signupForm.value;\n\t\tconsole.log('user', user);\n    console.log('stringified user', JSON.stringify(user));\t  \t\n  \t//Get user from the html\n  \tthis.service.createUser(user)\n  \t\t.subscribe(response => {\n  \t\t\tconsole.log('Response from signup API,', response);\n  \t});\n  }\n\n}\n","<!--\n<form>\n\t<input type=\"text\" name=\"firstname\" class=\"input-lg\" placeholder=\"First Name\" />\n\t<input type=\"text\" name=\"username\" class=\"input-lg\" placeholder=\"Username\" />\n\t<input type=\"email\" name=\"\" class=\"input-lg\" placeholder=\"Email\" />\n\t<input type=\"password\" name=\"\" class=\"input-lg\" placeholder=\"Password\" />\n\t<button class=\"btn btn-primary\" (click)=\"signup(form.value)\">Signup</button>\n</form>\n-->\n\n<form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\n    <div class=\"form-group\">\n        <label for=\"username\">First Name</label>\n        <input \n        \t\tformControlName=\"firstname\"\n            id=\"firstname\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input \n        \t\tformControlName=\"username\"\n            id=\"username\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Email</label>\n        <input \n        \t\tformControlName=\"email\"\n            id=\"email\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input \n        \t\tformControlName=\"password\"\n            id=\"password\" \n            type=\"text\" \n            class=\"form-control\">\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\">Signup</button>\n</form>\n\n<a [routerLink]=\"['/']\"> Back to login </a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>welcome works!</p>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}